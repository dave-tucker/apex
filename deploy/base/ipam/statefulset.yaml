apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ipam
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ipam
      app.kubernetes.io/instance: ipam
      app.kubernetes.io/name: ipam
  serviceName: "ipam"
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ipam
        app.kubernetes.io/instance: ipam
        app.kubernetes.io/name: ipam
    spec:
      containers:
        - name: ipam-db
          image: docker.io/library/postgres:15.1-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: floofykittens
            - name: POSTGRES_USER
              value: ipam
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql
              subPath: data
              name: postgresdb
        - name: ipam
          image: ghcr.io/metal-stack/go-ipam:v1.11.3
          imagePullPolicy: IfNotPresent
          args:
            - --grpc-server-endpoint=0.0.0.0:9090
            - postgres
            - --host=localhost
            - --dbname=ipam
            - --user=ipam
            - --password=floofykittens
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
      restartPolicy: Always
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: ipam-postgres-pv-claim
