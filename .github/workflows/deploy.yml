name: deploy

on:
  push:
    branches: [main]

env:
  REGISTRY: quay.io
  REPOSITORY: apex
  APISERVER_IMAGE_NAME: apiserver
  FRONTEND_IMAGE_NAME: frontend

jobs:
  build-images:
    name: Build Images
    runs-on: ubuntu-latest
    environment: image-repositories
    steps:
      - uses: actions/checkout@v2

      - name: Login to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_PASSWORD }}

      - name: Build apiserver image
        id: build-apiserver
        uses: redhat-actions/buildah-build@v2
        with:
          image: apiserver
          tags: latest ${{ github.sha }} ${{ github.ref_name }}
          containerfiles: |
            ./Containerfile.apiserver

      - name: Push apiserver to quay.io/
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-apiserver.outputs.image }}
          tags: ${{ steps.build-apiserver.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}

      - name: Build frontend image
        id: build-frontend
        uses: redhat-actions/buildah-build@v2
        with:
          image: frontend
          tags: latest ${{ github.sha }} ${{ github.ref_name }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          containerfiles: |
            ./Containerfile.frontend

      - name: Push frontend to quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-frontend.outputs.image }}
          tags: ${{ steps.build-frontend.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}

  update-deployment:
    name: Update Deployment
    needs: ["build-images"]
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Calculate Short SHA
        id: gitsha
        run: |
          echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Kustomize
        run: |
          mkdir -p $HOME/.local/bin
          pushd $HOME/.local/bin
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          popd
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update QA Images
        run: |
          pushd ./deploy/apex/overlays/qa
          kustomize edit set image ${REGISTRY}/${REPOSITORY}/${APISERVER_IMAGE_NAME}:${GITHUB_SHA}
          kustomize edit set image ${REGISTRY}/${REPOSITORY}/${FRONTEND_IMAGE_NAME}:${GITHUB_SHA}
          popd

      - name: Check for changes
        run: |
          git diff --quiet || echo "COMMIT_CHANGES=1" >> $GITHUB_ENV

      - name: Commit Changes
        id: commit
        if: env.COMMIT_CHANGES == 1
        uses: devops-infra/action-commit-push@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          commit_prefix: "[deploy] "
          commit_message: "Update prod images to ${{ steps.gitsha.outputs.short }}"
